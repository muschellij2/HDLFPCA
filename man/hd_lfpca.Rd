% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hd_lfpca.R
\name{hd_lfpca}
\alias{hd_lfpca}
\title{Conduct high-dimensional longitudinal principal component analysis}
\usage{
hd_lfpca(
  Y,
  T,
  J,
  I,
  visit,
  verbose = 1,
  Nx = NA,
  Nw = NA,
  varthresh = 0.99,
  projectthresh = 1,
  timeadjust = FALSE,
  figure = FALSE
)
}
\arguments{
\item{Y}{p-by-J matrix,}

\item{T}{Time of the image collection}

\item{J}{Total number of observations}

\item{I}{Total number of subjects}

\item{visit}{Vector of number of visits per subjects}

\item{verbose}{print diagnostic messages, higher number for more verbosity}

\item{Nx}{Dimension of the subject-specific components}

\item{Nw}{Dimension of the subject-visit specific components}

\item{varthresh}{(default=0.99) Threshold for variance explained for both subject-specific and subject-visit specific components for dimension selection}

\item{projectthresh}{Threshold for variance explain in the first step of SVD}

\item{timeadjust}{(default=FALSE) Scale time per subject}

\item{figure}{should a bar plot of the variance explained be plotted?}
}
\value{
A list with the following elements:
\describe{
\item{xi}{Subject-specific principal component scores.}
\item{phix0}{Subject-specific principal component loading corresponding to intercept.}
\item{phix1}{Subject-specific principal component loading corresponding to slope.}
\item{zeta}{Subject-visit-specific principal component scores.}
\item{phiw}{Subject-visit-specific principal component loading}
}
}
\description{
For V-by-J dimensional matrix of Y, HDLPCA first reduce the dimension of p to J if V>J:
\code{Y = UDV}. Then, longitudinal PCA is applied to the projected scores of Y on the p-dimensional subspace: Y1=DY.
The dimension of the subspace is selected based on the variance explained by first p-components.
The default value is \code{projectthresh}=1.
}
\examples{
run_list = example_hd_data_small
phix0 = run_list$phix0
phix1 = run_list$phix1
phiw = run_list$phiw
Y = run_list$Y
time = run_list$time
J = run_list$J
I = run_list$I
visit = run_list$visit
# indices = 1:2500 # all indices
indices = 1:700
re <- HDLFPCA::hd_lfpca(
  Y[indices,],
  T = scale(time, center = TRUE, scale = TRUE),
  J = J,
  I = I,
  visit = visit,
  varthresh = 0.95,
  projectthresh = 1,
  timeadjust = FALSE
  )

\donttest{
run_list = example_hd_data
phix0 = run_list$phix0
phix1 = run_list$phix1
phiw = run_list$phiw
Y = run_list$Y
time = run_list$time
J = run_list$J
I = run_list$I
visit = run_list$visit
# indices = 1:2500 # all indices
indices = 1:700
re <- HDLFPCA::hd_lfpca(
  Y[indices,],
  T = scale(time, center = TRUE, scale = TRUE),
  J = J,
  I = I,
  visit = visit,
  varthresh = 0.95,
  projectthresh = 1,
  timeadjust = FALSE
  )
cor(phix0[indices,], re$phix0)
cor(phix1[indices,], re$phix1)
if (requireNamespace("gplots", quietly = TRUE)) {
  library(gplots)
  par(mfrow = c(2, 2),
      mar = rep(0.5, 4),
      bg = "gray")
  bs = c(-100:100) / 1000 * 1.5
  image(phix0[indices,],
        axes = FALSE,
        col = bluered(200),
        breaks = bs)
  image(re$phix0[, 1:3],
        axes = FALSE,
        col = bluered(200),
        breaks = bs)
  image(phix1[indices,],
        axes = FALSE,
        col = bluered(200),
        breaks = bs)
  image(re$phix1[, 1:3],
        axes = FALSE,
        col = bluered(200),
        breaks = bs)
}
}

\donttest{
# need to transpose for SVD
re <- HDLFPCA::hd_lfpca(
  Y[1:400, ],
  T = scale(time, center = TRUE, scale = TRUE),
  J = J,
  I = I,
  visit = visit,
  Nw = 20,
  Nx = 16,
  varthresh = 0.95,
  projectthresh = 1,
  timeadjust = TRUE,
  verbose = 2,
  figure = TRUE
)
}
}
\references{
Zipunnikov, V., Greven, S., Shou, H., Caffo, B., Reich, D. S., & Crainiceanu, C. (2014). Longitudinal High-Dimensional Principal Components Analysis with Application to Diffusion Tensor Imaging of Multiple Sclerosis. The Annals of Applied Statistics, 8(4), 2175â€“2202.
}
\author{
Seonjoo Lee, \email{sl3670@cumc.columbia.edu}
}
\keyword{glmnet}
\keyword{hdlfpca}
